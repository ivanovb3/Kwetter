@startuml blogging_context
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

AddElementTag("microservice", $bgColor="#93A8FF")

Container(frontend, "Web Application", "JavaScript, React", "The user intefrace used to share information with other people")
Container(frontendmods, "Web Application", "JavaScript, React", "The admin and moderator interface used to manage users")
Container(gateway, "API Gateway", "Ingress", "Service discovery, load balancing")

System_Boundary(c1, "Microservice system") {
    Container(userservice, "User Profile Service", "JavaScript", "Handles access with users information", $tags="microservice")
    Container(tweetservice, "Tweet Service", "JavaScript", "Handles communication with tweets", $tags="microservice")
    Container(followerservice, "Follower Service", "JavaScript", "Handles communication with followers", $tags="microservice")
    Container(authservice, "Auth Service", "JavaScript", "Handles user authentication", $tags="microservice")
    Container(reactservice, "React Service", "JavaScript", "Handles reacts", $tags="microservice")
    Container(commentservice, "Comment Service", "JavaScript", "Handles comments", $tags="microservice")
    Container(organizationservice, "Organization Service", "JavaScript", "Handles user's roles", $tags="microservice")
    ' Container(commentservice, " Service", "JavaScript", "Handles trends", $tags="microservice")

    Container(eventbus, "Event Bus", "NATS", "Communication between microservices")  
}

Rel(frontend, gateway, "Makes API calls ", "HTTPS/JSON")
Rel(frontendmods, gateway, "Makes API calls ", "HTTPS/JSON")
Rel(gateway, userservice, "Request")
Rel(gateway, tweetservice, "Request")
Rel(gateway, followerservice, "Request")
Rel(gateway, reactservice, "Request")
Rel(gateway, commentservice, "Request")
Rel(gateway, authservice, "Request")
Rel(gateway, organizationservice, "Request")

Rel(userservice, eventbus, "Event")
Rel(tweetservice, eventbus, "Event")
Rel(followerservice, eventbus, "Event")
Rel(commentservice, eventbus, "Event")
Rel(reactservice, eventbus, "Event")
Rel(authservice, eventbus, "Event")
Rel(organizationservice, eventbus, "Event")

SHOW_LEGEND()
@enduml